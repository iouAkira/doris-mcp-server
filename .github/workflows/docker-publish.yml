# .github/workflows/docker-build-push.yml

name: Build and Push Docker Image to Docker Hub

on:
  workflow_dispatch: # Allows manual triggering of the workflow
    inputs:
      dockerhub_repository:
        description: 'Full Docker Hub repository (e.g., yourusername/doris-mcp-server or orgname/doris-mcp-server)'
        required: true
        type: string
      image_tag:
        description: 'Image tag (e.g., latest, v1.0.0, git-sha)'
        required: false
        default: 'latest'
        type: string
  push: # Optional: Trigger on push to main branch as well
    branches:
      - main # Or your default branch

jobs:
  build_and_push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine Image Name and Tag
        id: image_meta
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "repository=${{ github.event.inputs.dockerhub_repository }}" >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            # For push events, constructs a repository name.
            # Ensure DOCKERHUB_USERNAME secret is set to your Docker Hub username/organization for pushes.
            echo "repository=${{ secrets.DOCKERHUB_USERNAME }}/doris-mcp-server" >> $GITHUB_OUTPUT
            echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT # Tag with the Git SHA for pushes
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory as build context
          file: ./Dockerfile # Path to the Dockerfile
          push: true # Actually push the image
          tags: ${{ steps.image_meta.outputs.repository }}:${{ steps.image_meta.outputs.tag }}
          cache-from: type=gha # Enable GitHub Actions cache for Docker layer caching
          cache-to: type=gha,mode=max
